{"version":3,"sources":["images/gzhu-logo.png","enums.ts","pages/login/components/home/index.tsx","const/const.ts","api/const.ts","api/net.ts","api/modules/login.ts","pages/login/components/land/index.tsx","pages/login/components/register/index.tsx","pages/login/index.tsx","pages/user/edit/index.tsx","pages/user/profile/index.tsx","pages/recycle/index.tsx","pages/read/index.tsx","pages/plus/index.tsx","const/siderMenu.ts","pages/read/components/homework/index.tsx","pages/read/components/detail/index.tsx","pages/read/components/status/index.tsx","pages/home/index.tsx","App.tsx","index.tsx"],"names":["module","exports","HomePageCurComponents","LoginType","Home","changeCurComponent","this","props","className","src","gzhuLogoPng","alt","onClick","LOGIN","REGISTER","Component","withRouter","formItemLayout","labelCol","xs","span","sm","wrapperCol","hideRequiredMark","config","baseUrl","getUrl","url","path","params","axios","method","then","response","data","catch","error","console","log","Promise","reject","checkEmail","email","a","net","post","registerEmail","loginUser","loginEmailRules","type","message","required","Land","autobind","e","preventDefault","form","validateFields","err","values","code","text","pathname","state","LOGIN_SUCCESS","success","history","push","setFields","password","value","errors","Error","getFieldDecorator","onSubmit","confirmLogin","Item","validateFirst","validateTrigger","rules","prefix","placeholder","allowClear","Password","htmlType","HOME","Form","create","registerEmailRule","validator","rule","callback","result","emailAvailable","Register","confirmRegister","Login","curComponent","curVal","setState","showCurComponent","Option","Select","EditProfile","loading","setTimeout","visible","modalVisible","handleCancel","title","onOk","handleOk","onCancel","footer","key","label","Group","UserProfile","showModal","Recycle","PureComponent","mockData","name","teacher","time","Read","courseObj","obj","map","item","style","fontSize","color","goHomeworkPage","renderCourseItem","RangePicker","DatePicker","Plus","siderMenu","icon","children","component","Profile","menuComponent","createMenuComponent","menuList","Array","isArray","Homework","goHomeworkStatus","location","to","renderHomeworkItem","class","isSubmit","Status","size","goHomeworkDetail","renderStudentStatus","SubMenu","Menu","Content","Layout","Sider","collapsed","curMenu","sessionStorage","getItem","setItem","menu","match","menuItems","changeCurMenu","createMenuItem","trigger","collapsible","theme","mode","defaultOpenKeys","defaultSelectedKeys","toggleSider","createSider","exact","Detail","App","window","href","includes","basename","document","ua","navigator","userAgent","toLowerCase","isAndroid","indexOf","isIOS","body","classList","add","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d26beaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gzhu-logo.8b24e9b7.png\";","type EnumText<T extends number> = {\n  [k in T]: string\n}\n\nexport enum HomePageCurComponents {\n  HOME = 1, // 首页\n  REGISTER = 2, // 注册\n  LOGIN = 3 // 登陆\n}\n\nexport enum LoginType {\n  LOGIN_SUCCESS = 0, // 登陆成功\n  LOGIN_FAIL = 1, // 登陆失败\n}\n","import React, { Component } from 'react';\nimport './style.less';\nimport gzhuLogoPng from '@images/gzhu-logo.png';\nimport { withRouter , RouteComponentProps } from 'react-router-dom';\nimport { HomePageCurComponents } from '@src/enums';\n\ninterface Props extends RouteComponentProps {\n  changeCurComponent: (curVal: HomePageCurComponents) => void\n}\n\nclass Home extends Component<Props> {\n  render() {\n    const { changeCurComponent } = this.props;\n\n    return (\n      <div className=\"home-container\">\n        <img src={gzhuLogoPng} alt=\"gzhuLogo.png\"/>\n        <div className=\"title-box\">\n          <h1>超自然作业派</h1>\n          <h1>Paper Stack</h1>\n          <h2>博学笃行，与时俱进</h2>\n        </div>\n        <div className=\"button-box\">\n          <button onClick={() => changeCurComponent(HomePageCurComponents.LOGIN)}>登陆</button>\n          <button onClick={() => changeCurComponent(HomePageCurComponents.REGISTER)}>注册</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","export const MESSAGE_TIME = 1.5; // message框停留的秒数\n\nexport const formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 22 },\n  },\n  hideRequiredMark: true\n};\n","export const config = {\n  baseUrl: 'https://api.paperstack.qfstudio.net'\n};\n","import axios from 'axios';\nimport { config } from './const';\n\nfunction getUrl(url: string) {\n  return `${config.baseUrl}${url}`;\n}\n\nclass Network {\n  get(path: string, params?: any) {\n    return axios({\n      url: getUrl(path),\n      method: 'get',\n      params\n    }).then(response => {\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n      if (error.response) {\n        return Promise.reject(error.response.data);\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  post(path: string, data?: any) {\n    return axios({\n      url: getUrl(path),\n      method: 'post',\n      data\n    }).then(response => {\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n      if (error.response) {\n        return Promise.reject(error.response.data);\n      }\n      return Promise.reject(error);\n    });\n  }\n}\n\nexport default new Network();\n","import net from '../net';\n\nexport async function checkEmail(email: string):Promise<{result: {emailAvailable: boolean}}> {\n  return net.post('/check/email', { email });\n}\n\nexport async function registerEmail(params: object):Promise<{code: number}> {\n  return net.post('/register', params);\n}\n\nexport async function loginUser(params: object):Promise<{code: number, message: string}> {\n  return net.post('/login', params);\n}\n","import React, { Component } from 'react';\nimport './style.less';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Form, Input, Button, Icon, message } from 'antd';\nimport { FormComponentProps } from 'antd/es/form';\nimport { LoginType, HomePageCurComponents } from '@src/enums';\nimport { MESSAGE_TIME } from '@src/const/const';\nimport { loginUser } from '@api/login';\nimport { autobind } from 'core-decorators';\n\ninterface Props extends FormComponentProps, RouteComponentProps {\n  changeCurComponent: (curVal: HomePageCurComponents) => void\n}\n\nconst loginEmailRules: object[] = [\n  {\n    type: 'email',\n    message: '邮箱格式不正确',\n  },\n  {\n    required: true,\n    message: '邮箱不能为空',\n  },\n];\n\n@autobind\nclass Land extends Component<Props, any> {\n  confirmLogin(e: any) {\n    e.preventDefault();\n\n    this.props.form.validateFields(async (err, values) => {\n      if (err) {\n        message.error('登陆失败', MESSAGE_TIME);\n        return;\n      }\n\n      const { code, message: text } = await loginUser(values);\n      const path = {\n        pathname: '/home',\n        state: values,\n      };\n\n      if (code === LoginType.LOGIN_SUCCESS) {\n        message.success('登陆成功', MESSAGE_TIME);\n        this.props.history.push(path);\n      } else {\n        this.props.form.setFields({\n          password: {\n            value: values.password,\n            errors: [new Error(text)],\n          }\n        });\n        message.error('登陆失败', MESSAGE_TIME);\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { changeCurComponent } = this.props;\n\n    return (\n      <Form onSubmit={(e: any) => this.confirmLogin(e)} className=\"land-box\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            validateFirst: true,\n            validateTrigger: 'onBlur',\n            rules: loginEmailRules\n          })(\n            <Input\n              prefix={<Icon type=\"user\" />}\n              placeholder=\"请输入邮箱\"\n              allowClear\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            validateFirst: true,\n            rules: [{ required: true, message: '密码不能为空' }],\n          })(\n            <Input.Password\n              prefix={<Icon type=\"lock\" />}\n              placeholder=\"请输入密码\"\n              allowClear\n            />\n          )}\n        </Form.Item>\n        <Button className=\"land-login-btn\" htmlType=\"submit\">登陆</Button>\n        <div className=\"land-footer\">\n          <span\n            className=\"land-footer-item land-footer-item-hover\"\n            onClick={() => changeCurComponent(HomePageCurComponents.HOME)}\n          >\n            返回上层\n          </span>\n          <span className=\"land-footer-item land-footer-item-hover\">忘记密码?</span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Form.create<Props>({})(Land));\n","import React, { Component } from 'react';\nimport '../land/style.less';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Form, Input, Button, Icon, message } from 'antd';\nimport { FormComponentProps } from 'antd/es/form';\nimport { autobind } from 'core-decorators';\nimport { checkEmail, registerEmail } from '@api/login';\nimport { MESSAGE_TIME } from '@src/const/const';\nimport { HomePageCurComponents } from '@src/enums';\n\ninterface Props extends RouteComponentProps, FormComponentProps {\n  changeCurComponent: (curVal: HomePageCurComponents) => void\n}\n\nconst registerEmailRule: object[] = [\n  {\n    type: 'email',\n    message: '邮箱格式不正确',\n  }, {\n    required: true,\n    message: '邮箱不能为空',\n  }, {\n    validator: async function(rule: any, value: string, callback: any) {\n      const isEmailOk = (await checkEmail(value)).result.emailAvailable;\n      if(!isEmailOk) {\n        callback('该邮箱已经注册过了');\n      } else {\n        callback();\n      }\n    }\n  }\n];\n\n@autobind\nclass Register extends Component<Props, any> {\n  confirmRegister(e: any) {\n    e.preventDefault();\n\n    this.props.form.validateFields(async (err, values) => {\n      if (err) {\n        message.error('注册失败', MESSAGE_TIME);\n        return;\n      }\n\n      const res:number = (await registerEmail(values)).code;\n      if (res === 0) {\n        message.success('注册成功', MESSAGE_TIME);\n        this.props.history.push('/login');\n      } else {\n        message.error('注册失败', MESSAGE_TIME);\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { changeCurComponent } = this.props;\n\n    return (\n      <Form onSubmit={(e: any) => this.confirmRegister(e)} className=\"land-box\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            validateFirst: true,\n            validateTrigger: 'onBlur',\n            rules: registerEmailRule\n          })(\n            <Input\n              prefix={<Icon type=\"user\" />}\n              placeholder=\"请输入邮箱\"\n              allowClear\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            validateFirst: true,\n            rules: [{ required: true, message: '密码不能为空' }],\n          })(\n            <Input.Password\n              prefix={<Icon type=\"lock\" />}\n              placeholder=\"请输入密码\"\n              allowClear\n            />\n          )}\n        </Form.Item>\n        <Button className=\"land-login-btn\" htmlType=\"submit\">注册</Button>\n        <div className=\"land-footer\">\n          <span\n            className=\"land-footer-item land-footer-item-hover\"\n            onClick={() => changeCurComponent(HomePageCurComponents.HOME)}\n          >\n            返回上层\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Form.create<Props>({})((Register)));\n","import React, { Component } from 'react';\nimport './style.less';\nimport gzhuLogoPng from '@images/gzhu-logo.png';\nimport Home from './components/home';\nimport Land from './components/land/index';\nimport Register from './components/register/index';\nimport { HomePageCurComponents } from '@src/enums';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { autobind } from 'core-decorators';\n\ninterface State {\n  curComponent: HomePageCurComponents\n}\n\n@autobind\nclass Login extends Component<RouteComponentProps, State> {\n  constructor(props: RouteComponentProps) {\n    super(props);\n    this.state = {\n      curComponent: HomePageCurComponents.HOME\n    };\n  }\n\n  changeCurComponent(curVal: HomePageCurComponents):void {\n    this.setState({\n      curComponent: curVal\n    });\n  }\n\n  showCurComponent() {\n    const { curComponent } = this.state;\n\n    if (curComponent === HomePageCurComponents.HOME) {\n      return <Home changeCurComponent={this.changeCurComponent}/>;\n    } else {\n      return (\n        <div className=\"login-container\">\n          <div className=\"gzhu-logo-container\">\n            <img src={gzhuLogoPng} alt=\"gzhuLogo.png\"/>\n          </div>\n          { curComponent === HomePageCurComponents.LOGIN ?\n            <Land changeCurComponent={this.changeCurComponent} /> :\n            <Register changeCurComponent={this.changeCurComponent} /> }\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"p-login-page\">\n        { this.showCurComponent() }\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Modal, Button, Form, Input, Select, Radio } from 'antd';\nimport { autobind } from 'core-decorators';\nimport { FormComponentProps } from 'antd/es/form';\nimport { formItemLayout } from '@src/const/const';\n\nconst { Option } = Select;\ninterface Props extends FormComponentProps {\n  modalVisible: boolean,\n  handleCancel: () => void\n}\n\ninterface State {\n  loading: boolean\n}\n\n@autobind\nclass EditProfile extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n  }\n\n  handleOk() {\n    this.setState({\n      loading: true\n    });\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 3000);\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { modalVisible: visible, handleCancel } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Modal\n        visible={visible}\n        title=\"编辑个人信息\"\n        onOk={this.handleOk}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleCancel}>取消</Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            loading={loading}\n            onClick={this.handleOk}\n          >\n            保存\n          </Button>\n        ]}\n      >\n        <Form {...formItemLayout}>\n          <Form.Item label=\"姓名\">\n            {getFieldDecorator('name', {\n              rules: [{ required: true, message: '姓名不能为空' }],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"学号\">\n            {getFieldDecorator('studentId', {\n              rules: [{ required: true, message: '学号不能为空' }],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"性别\">\n            {getFieldDecorator('gender', {\n              rules: [{ required: true, message: '性别不能为空' }],\n            })(\n              <Radio.Group>\n                <Radio value=\"男\">男</Radio>\n                <Radio value=\"女\">女</Radio>\n              </Radio.Group>,\n            )}\n          </Form.Item>\n          <Form.Item label=\"学院\">\n            {getFieldDecorator('college', {\n              rules: [{ required: true, message: '学院不能为空' }],\n            })(\n              <Select placeholder=\"\">\n                <Option value=\"usa\">U.S.A</Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"班级\">\n            {getFieldDecorator('class', {\n              rules: [{ required: true, message: '班级不能为空' }],\n            })(\n              <Select placeholder=\"\">\n                <Option value=\"usa\">U.S.A</Option>\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\n// export default EditProfile;\nexport default Form.create<Props>({})(EditProfile);\n","import React, { Component, Fragment } from 'react';\nimport './style.less';\nimport { Button } from 'antd';\nimport { autobind } from 'core-decorators';\nimport EditProfile from '@src/pages/user/edit';\n\ninterface State {\n  modalVisible: boolean\n}\n\n@autobind\nclass UserProfile extends Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({\n      modalVisible: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  render() {\n    const { modalVisible} = this.state;\n\n    return (\n      <Fragment>\n        <div className=\"profile-container\">\n          <div className=\"porfile-box\">\n            <div className=\"portrait\">用户头像</div>\n            <div className=\"user-info\">\n              <p>有马公生</p>\n              <p>\n                <span>性别：</span>\n                <span>学院：</span>\n              </p>\n              <p>\n                <span>学号：</span>\n                <span>班级：</span>\n              </p>\n            </div>\n            <div className=\"edit-info-btn\">\n              <Button type=\"primary\" onClick={this.showModal}>编辑个人信息</Button>\n            </div>\n          </div>\n          <div className=\"user-info-container\">\n            <div className=\"user-projects\">\n              <div className=\"project-setting\">\n                <label>我参与的项目</label>\n                <span>新建作业项目</span>\n                <span>导出</span>\n              </div>\n              <div className=\"project-content\"></div>\n            </div>\n            <div className=\"user-setting\">\n              <span>账号绑定</span>\n              <span>修改邮箱地址</span>\n              <span>修改密码</span>\n              <span>注销账号</span>\n              <span>个性化设置</span>\n            </div>\n          </div>\n        </div>\n        <EditProfile\n          modalVisible={modalVisible}\n          handleCancel={this.handleCancel}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { PureComponent } from 'react';\n\nclass Recycle extends PureComponent {\n  render() {\n    return (\n      <div>\n        <p>回收站</p>\n      </div>\n    );\n  }\n}\n\nexport default Recycle;\n","import React, { PureComponent } from 'react';\nimport './style.less';\nimport { Button, Icon } from 'antd';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst mockData = [\n  {\n    name: '计算机网络',\n    teacher: '唐琳',\n    time: '大三上',\n  }, {\n    name: '操作系统',\n    teacher: '陶文正',\n    time: '大三上',\n  }, {\n    name: '编译原理',\n    teacher: '冯元勇',\n    time: '大三下',\n  }, {\n    name: '数据结构',\n    teacher: '杜娇',\n    time: '大二下',\n  }\n];\n\nclass Read extends PureComponent<RouteComponentProps, {}> {\n  goHomeworkPage(courseObj: any) {\n    const obj = {\n      pathname: '/home/homework',\n      state: courseObj,\n    };\n    this.props.history.push(obj);\n  }\n\n  renderCourseItem() {\n    return mockData.map(item => {\n      return (\n        <div key={item.name} className=\"course-item-box\">\n          <Icon type=\"file\" style={{ fontSize: '40px', color: '#449df5' }} />\n          <span className=\"course-name\">{item.name}</span>\n          <div className=\"course-info\">\n            <span>{item.time}</span>\n            <span>&nbsp;- {item.teacher}</span>\n          </div>\n          <div className=\"visit-course-btn\">\n            <Button type=\"primary\" onClick={() => this.goHomeworkPage({name: item.name})}>进入</Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"course-page-container\">\n        <h2>所有科目</h2>\n        <div className=\"course-box\">\n          {this.renderCourseItem()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Read);\n","import React, { PureComponent } from 'react';\nimport './style.less';\nimport { Input, Form, Select, DatePicker, Icon, Button } from 'antd';\nimport { FormComponentProps } from 'antd/es/form';\nimport { formItemLayout } from '@src/const/const';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nclass Plus extends PureComponent<FormComponentProps, {}> {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"plus-course-container\">\n        <h2>新建</h2>\n        <div className=\"homework-form-container\">\n          <Form {...formItemLayout}>\n            <Form.Item label=\"作业名称\">\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: '作业名称不能为空' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"科目\">\n              {getFieldDecorator('course', {\n                rules: [{ required: true, message: '科目不能为空' }],\n              })(\n                <Select placeholder=\"\">\n                  <Option value=\"计算机网络\">计算机网络</Option>\n                  <Option value=\"数据结构\">数据结构</Option>\n                  <Option value=\"操作系统\">操作系统</Option>\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"日期\">\n              {getFieldDecorator('time', {\n                rules: [{ required: true, message: '日期不能为空' }],\n              })(\n                <RangePicker />\n              )}\n            </Form.Item>\n            <Form.Item label=\"作业要求\">\n              <div className=\"edit-homework-btn\">\n                <Icon type=\"plus-circle\" style={{ fontSize: '30px' }} />\n              </div>\n            </Form.Item>\n            <Form.Item label=\"参与方\">\n              {getFieldDecorator('people', {\n                rules: [{ required: true, message: '参与方不能为空' }],\n              })(\n                <div className=\"people-picker\">\n                  <div>\n                    <p>软件171</p>\n                    <p>软件172</p>\n                    <p>软件173</p>\n                    <p>软件174</p>\n                    <p>计科171</p>\n                    <p>计科172</p>\n                    <p>计科173</p>\n                    <p>计科174</p>\n                  </div>\n                  <span>—</span>\n                  <div>\n                    <p>同学A</p>\n                    <p>同学B</p>\n                    <p>同学C</p>\n                    <p>同学D</p>\n                    <p>同学E</p>\n                    <p>同学F</p>\n                    <p>同学G</p>\n                    <p>同学H</p>\n                  </div>\n                </div>\n              )}\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"setting-btn\">\n          <Button type=\"primary\">确定</Button>\n          <Button type=\"primary\">取消</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create({})(Plus);\n","import Profile from '@src/pages/user/profile';\nimport Recycle from '@src/pages/recycle';\nimport Read from '@src/pages/read';\nimport Plus from '@src/pages/plus';\n\ninterface MenuComponent {\n  [index: string]: any\n}\n\nexport const siderMenu = [\n  {\n    text: '作业',\n    icon: 'book',\n    key: 'book',\n    path: 'book',\n    children: [\n      {\n        text: '浏览作业',\n        icon: 'read',\n        key: 'read',\n        path: 'read',\n        component: Read,\n      }, {\n        text: '新建作业',\n        icon: 'plus',\n        key: 'plus',\n        path: 'plus',\n        component: Plus,\n      }\n    ]\n  }, {\n    text: '回收站',\n    icon: 'delete',\n    key: 'recycle',\n    path: 'recycle',\n    component: Recycle,\n  }, {\n    text: '个人信息',\n    icon: 'user',\n    key: 'profile',\n    path: 'profile',\n    component: Profile,\n  }\n];\n\nexport const menuComponent:MenuComponent = {};\n\n// 以menu的key作为对象的key，对应的组件作为值生成一个对象，用于匹配不同menu下的页面\n(function createMenuComponent(menuList: Array<any>) {\n  for(const item of menuList) {\n    if (Array.isArray(item.children)) {\n      createMenuComponent(item.children);\n    } else {\n      menuComponent[item.key] = item.component;\n    }\n  }\n})(siderMenu);\n","import React, { PureComponent } from 'react';\nimport './style.less';\nimport { Icon } from 'antd';\nimport { Link, RouteComponentProps } from 'react-router-dom';\n\nconst mockData = [\n  {\n    name: '第一周课后作业',\n  }, {\n    name: '第二周课后作业',\n  }, {\n    name: '第三周课后作业',\n  }, {\n    name: '第四周课后作业',\n  }, {\n    name: '第五周课后作业',\n  }, {\n    name: '第六周课后作业',\n  }, {\n    name: '第七周课后作业',\n  }, {\n    name: '第八周课后作业',\n  }, {\n    name: '第九周课后作业',\n  }, {\n    name: '第十周课后作业',\n  }, {\n    name: '第十一周课后作业',\n  }\n];\n\nclass Homework extends PureComponent<RouteComponentProps, {}> {\n  renderHomeworkItem() {\n    return mockData.map(item => {\n      return (\n        <div className=\"homework-item\" key={item.name} onClick={() => this.goHomeworkStatus({name: item.name})}>\n          <Icon type=\"file-text\" style={{ fontSize: '90px' }} />\n          <p>{item.name}</p>\n        </div>\n      );\n    });\n  }\n\n  goHomeworkStatus(courseObj: any) {\n    const obj = {\n      pathname: '/home/homework/status',\n      state: courseObj,\n    };\n    this.props.history.push(obj);\n  }\n\n  render() {\n    const title = this.props.location.state ? this.props.location.state.name : '';\n    return (\n      <div className=\"homework-page-container\">\n        <div className=\"homework-header\">\n          <div className=\"go-back-btn\">\n            <Link to=\"/home\">\n              <Icon type=\"arrow-left\" style={{ fontSize: '30px', color: '#000' }} />\n            </Link>\n          </div>\n          <h2>{title}</h2>\n        </div>\n        <div className=\"homework-box\">\n          {this.renderHomeworkItem()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homework;\n","import React, { PureComponent } from 'react';\nimport './style.less';\nimport { Icon, Upload, Button } from 'antd';\nimport { Link, RouteComponentProps } from 'react-router-dom';\n\nclass Homework extends PureComponent<RouteComponentProps, {}> {\n  render() {\n    const title = this.props.location.state ? this.props.location.state.name : '';\n    return (\n      <div className=\"detail-page-container\">\n        <div className=\"detail-header\">\n          <div className=\"go-back-btn\">\n            <Link to=\"/home/homework/status\">\n              <Icon type=\"arrow-left\" style={{ fontSize: '30px', color: '#000' }} />\n            </Link>\n          </div>\n          <h2>{title}</h2>\n        </div>\n        <div className=\"homework-detail-box\">\n          <div className=\"detail-box\">\n            <p>作业名称：我是名字</p>\n            <p>发起人：冯元勇（老师）</p>\n            <p>截止日期：2019-XX-XX-12:00</p>\n            <div className=\"homework-require-box\">\n              <div>\n                <span>作业要求：</span>\n              </div>\n              <div className=\"homework-require\">\n                <p>1. 完成实验一。</p>\n                <p>2. 提交实验一的源代码和实验报告。</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"upload-box\">\n            <Upload>\n              <div className=\"upload-btn\">\n                <Icon type=\"plus\" style={{ fontSize: '100px'}} />\n                <p>上传作业</p>\n              </div>\n            </Upload>\n          </div>\n        </div>\n        <div className=\"comments-container\">\n          <div className=\"comments-header\">\n            <h1>评论和评分</h1>\n            <div>\n              <Button type=\"primary\">评论</Button>\n            </div>\n          </div>\n          <div className=\"comments-box\">\n            <div className=\"commenter-portrait\"></div>\n            <div className=\"commenter-info\">\n              <h3>冯元勇</h3>\n              <span>老师</span>\n              <span>发起方</span>\n            </div>\n            <p>总体完成得不错，有些细节还可以再注意改进一下，继续加油！</p>\n            <span className=\"homework-grade\">95分</span>\n          </div>\n          <div className=\"comments-box\">\n            <div className=\"commenter-portrait\"></div>\n            <div className=\"commenter-info\">\n              <h3>学生一</h3>\n              <span>学生 软件171</span>\n              <span>参与方</span>\n            </div>\n            <p>不错不错！</p>\n          </div>\n          <div className=\"comments-box\">\n            <div className=\"commenter-portrait\"></div>\n            <div className=\"commenter-info\">\n              <h3>学生二</h3>\n              <span>学生 软件171</span>\n              <span>参与方</span>\n            </div>\n            <p>大佬大佬。</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homework;\n","import React, { PureComponent } from 'react';\nimport './style.less';\nimport { Icon, Button } from 'antd';\nimport { Link, RouteComponentProps } from 'react-router-dom';\n\nconst mockData = [\n  {\n    name: '我',\n    class: '软件171',\n    isSubmit: true,\n  }, {\n    name: '同学A',\n    class: '软件171',\n    isSubmit: true,\n  }, {\n    name: '同学B',\n    class: '软件171',\n    isSubmit: false,\n  }, {\n    name: '同学C',\n    class: '软件171',\n    isSubmit: true,\n  }, {\n    name: '同学D',\n    class: '软件171',\n    isSubmit: true,\n  }, {\n    name: '同学E',\n    class: '软件171',\n    isSubmit: false,\n  },\n];\n\nclass Status extends PureComponent<RouteComponentProps, {}> {\n  renderStudentStatus() {\n    const title = this.props.location.state ? this.props.location.state.name : '';\n\n    return mockData.map(item => {\n      return (\n        <div className=\"homework-status-box\" key={item.name}>\n          <div className=\"student-portrait\"></div>\n          <div className=\"student-info\">\n            <h3>{item.name}</h3>\n            <span>{item.class}</span>\n          </div>\n          <div className=\"homework-status-detail-box\">\n            <span className={item.isSubmit ? 'homework-status' : 'homework-status no-submit-homework'}>{item.isSubmit ? '已提交' :'未提交'}</span>\n            <div className=\"enter-homework-btn\">\n              <Button type=\"primary\" size=\"small\" onClick={() => this.goHomeworkDetail({name: title})}>进入</Button>\n            </div>\n            <div className=\"more-setting-box\">\n              <Button type=\"primary\" size=\"small\">预览作业</Button>\n              <Button type=\"primary\" size=\"small\">下载作业</Button>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  goHomeworkDetail(courseObj: any) {\n    const obj = {\n      pathname: '/home/homework/detail',\n      state: courseObj,\n    };\n    this.props.history.push(obj);\n  }\n\n  render() {\n    const title = this.props.location.state ? this.props.location.state.name : '';\n    return (\n      <div className=\"status-page-container\">\n        <div className=\"status-header\">\n          <div className=\"go-back-btn\">\n            <Link to=\"/home/homework\">\n              <Icon type=\"arrow-left\" style={{ fontSize: '30px', color: '#000' }} />\n            </Link>\n          </div>\n          <h2>{title}</h2>\n        </div>\n        <div className=\"homework-status-container\">\n          {this.renderStudentStatus()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from 'react';\nimport './style.less';\nimport { Route, Link, Switch, RouteComponentProps } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport { autobind } from 'core-decorators';\nimport { siderMenu, menuComponent } from '@src/const/siderMenu';\nimport MenuItem from 'antd/lib/menu/MenuItem';\nimport Homework from '@src/pages/read/components/homework';\nimport Detail from '@src/pages/read/components/detail';\nimport Status from '@src/pages/read/components/status';\n\nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\ninterface State {\n  collapsed: boolean,\n  curMenu: string\n}\n\n@autobind\nclass Home extends Component<RouteComponentProps, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      curMenu: siderMenu[0].children ? siderMenu[0].children[0].key : siderMenu[0].key\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.location.state, !sessionStorage.getItem('paper_stack'));\n    console.log(sessionStorage.getItem('paper_stack'), !sessionStorage.getItem('paper_stack'));\n    // 验证有没有登陆，没有的话重定型到登陆页，有的话则保存登陆信息到session storage里，刷新页面才不会丢失登陆态\n    if (!this.props.location.state && !sessionStorage.getItem('paper_stack')) {\n      this.props.history.push('/login');\n      return;\n    }\n    if (!sessionStorage.getItem('paper_stack')) {\n      sessionStorage.setItem('paper_stack', this.props.location.state.email);\n    }\n  }\n\n  toggleSider() {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n\n  changeCurMenu(curVal: string) {\n    this.setState({\n      curMenu: curVal\n    });\n  };\n\n  createMenuItem(menu: any) {\n    const { match } = this.props;\n\n    if (menu.children) {\n      const menuItems = (menu.children).map((item: any) => (\n        <Menu.Item key={item.key} onClick={e => this.changeCurMenu(e.key)}>\n          <Link to={`${match.url}/${item.path}`}>\n            <Icon type={item.icon} />\n            <span>{item.text}</span>\n          </Link>\n        </Menu.Item>\n      ));\n\n      return (\n        <SubMenu\n          key={menu.key}\n          title={\n            <span>\n              <Icon type={menu.icon} />\n              <span>{menu.text}</span>\n            </span>\n          }\n        >\n          {menuItems}\n        </SubMenu>\n      );\n    } else {\n      return (\n        <Menu.Item key={menu.key} onClick={e => this.changeCurMenu(e.key)}>\n          <Link to={`${match.url}/${menu.path}`}>\n            <Icon type={menu.icon} />\n            <span>{menu.text}</span>\n          </Link>\n        </Menu.Item>\n      );\n    }\n  }\n\n  createSider() {\n    return siderMenu.map(item =>\n      this.createMenuItem(item)\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    const { curMenu } = this.state;\n\n    return (\n      <Layout className=\"p-home\">\n        <Sider\n          className=\"layout-sider\"\n          trigger={null}\n          collapsible collapsed={this.state.collapsed}\n        >\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            defaultOpenKeys={[`${siderMenu[0].key}`]}\n            defaultSelectedKeys={[`${curMenu}`]}\n          >\n            <MenuItem className=\"collapsed-btn\" onClick={this.toggleSider}>\n              <Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}/>\n              <span>Paper Stack</span>\n            </MenuItem>\n\n            {this.createSider()}\n          </Menu>\n        </Sider>\n\n        <Layout>\n          <Content>\n            <Switch>\n              <Route path=\"/home/homework/detail\" exact component={Detail} />\n              <Route path=\"/home/homework/status\" exact component={Status} />\n              <Route path=\"/home/homework\" exact component={Homework} />\n              <Route path={`${match.url}/:id?`} component={menuComponent[curMenu]}/>\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './style.less';\nimport Login from './pages/login';\nimport Home from './pages/home';\n\nconst App = function() {\n  const baseUrl = window.location.href.includes('localhost') ? '' : window.location.pathname;\n\n  return (\n    <Router basename={baseUrl}>\n      <Route path=\"/:id(login)?\" exact component={Login} />\n      <Route path=\"/home\" component={Home} />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\ndocument.title = '超自然作业派';\n\n(function judgeMobile() {\n  const ua = window.navigator.userAgent.toLowerCase();\n  const isAndroid = ua.indexOf('android') > -1 || ua.indexOf('adr') > -1;\n  const isIOS = !!ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/i);\n  if (isAndroid || isIOS) {\n    document.body.classList.add('mobile');\n  }\n})();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}